{"ast":null,"code":"var _jsxFileName = \"/Users/ghalirasul/Documents/Pharma-app-all/client/src/components/hilfsstoffearten/Hilfsstoffearten.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\nimport './Hilfsstoffearten.css';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Hilfsstoffearten() {\n  _s();\n\n  const [arten, setArten] = useState([]); //art sind gedacht\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/api/hilfsstoffearten\").then(response => {\n      setArten(response.data);\n    });\n  }, []);\n\n  const artHilfsstoffe = artName => {\n    //artnameveriable senden\n    Axios.post(`http://localhost:3001/api/arths/${artName}`);\n  };\n\n  function testsyno(x) {\n    let result = 'keine';\n\n    if (x) {\n      result = x;\n    }\n\n    return result;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"GesamtListArt\",\n    children: [arten.map(val => {\n      return /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"EinzelArt\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/Hilfsstoffenlist\",\n            onClick: () => artHilfsstoffe(val.artName),\n            className: \"linkItem\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"ArtName\",\n              children: [\" \", val.artName, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"beschreibungArt\",\n            children: [\" \", val.beschreibung, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"element\",\n            children: \" Beispiel: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"beschreibung\",\n            children: testsyno(val.beispiel)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"element\",\n            children: \" Literatur: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"beschreibung\",\n            children: [\" \", val.litertaur]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"Seperator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)\n      }, val.artName, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 22\n      }, this);\n    }), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 8\n  }, this);\n}\n\n_s(Hilfsstoffearten, \"SoACwT7EH5YPGvc9UHLsNwdEUs8=\");\n\n_c = Hilfsstoffearten;\nexport default Hilfsstoffearten;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hilfsstoffearten\");","map":{"version":3,"sources":["/Users/ghalirasul/Documents/Pharma-app-all/client/src/components/hilfsstoffearten/Hilfsstoffearten.jsx"],"names":["React","useEffect","useState","Axios","Link","Hilfsstoffearten","arten","setArten","get","then","response","data","artHilfsstoffe","artName","post","testsyno","x","result","map","val","beschreibung","beispiel","litertaur"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,wBAAP;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;;AAEA,SAASC,gBAAT,GAA4B;AAAA;;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC,CADwB,CACgB;;AACxCD,EAAAA,SAAS,CAAC,MAAI;AACVE,IAAAA,KAAK,CAACK,GAAN,CAAU,4CAAV,EAAwDC,IAAxD,CAA8DC,QAAD,IAAY;AACrEH,MAAAA,QAAQ,CAACG,QAAQ,CAACC,IAAV,CAAR;AACH,KAFD;AAGD,GAJM,EAIL,EAJK,CAAT;;AAMA,QAAMC,cAAc,GAAGC,OAAD,IAAW;AAAE;AAC/BV,IAAAA,KAAK,CAACW,IAAN,CAAY,mCAAkCD,OAAQ,EAAtD;AACD,GAFH;;AAKE,WAASE,QAAT,CAAkBC,CAAlB,EAAqB;AACnB,QAAIC,MAAM,GAAE,OAAZ;;AACA,QAAID,CAAJ,EAAO;AACLC,MAAAA,MAAM,GAAGD,CAAT;AACD;;AACD,WAAOC,MAAP;AACD;;AACH,sBACG;AAAS,IAAA,SAAS,EAAC,eAAnB;AAAA,eACEX,KAAK,CAACY,GAAN,CAAWC,GAAD,IAAO;AACd,0BAAS;AAAA,+BACT;AAAS,UAAA,SAAS,EAAC,WAAnB;AAAA,kCACQ,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,mBAAT;AAA8B,YAAA,OAAO,EACrC,MAAKP,cAAc,CAACO,GAAG,CAACN,OAAL,CADnB;AAEF,YAAA,SAAS,EAAC,UAFR;AAAA,mCAGA;AAAI,cAAA,SAAS,EAAC,SAAd;AAAA,8BAA0BM,GAAG,CAACN,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA,kBADR,eAOE;AAAG,YAAA,SAAS,EAAC,iBAAb;AAAA,4BAAiCM,GAAG,CAACC,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,eAQE;AAAG,YAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF,eASE;AAAG,YAAA,SAAS,EAAC,cAAb;AAAA,sBAA8BL,QAAQ,CAACI,GAAG,CAACE,QAAL;AAAtC;AAAA;AAAA;AAAA;AAAA,kBATF,eAUE;AAAG,YAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF,eAWE;AAAG,YAAA,SAAS,EAAC,cAAb;AAAA,4BAA8BF,GAAG,CAACG,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXF,eAaM;AAAI,YAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,kBAbN;AAAA;AAAA;AAAA;AAAA;AAAA;AADS,SAAcH,GAAG,CAACN,OAAlB;AAAA;AAAA;AAAA;AAAA,cAAT;AAkBC,KAnBJ,CADF;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAwBH;;GA5CQR,gB;;KAAAA,gB;AA6CT,eAAeA,gBAAf","sourcesContent":["import React,{ useEffect, useState } from 'react';\nimport Axios from 'axios' ;\nimport './Hilfsstoffearten.css';\nimport {Link} from 'react-router-dom';\n\nfunction Hilfsstoffearten (){\n    const [arten, setArten] = useState([]); //art sind gedacht\n    useEffect(()=>{\n        Axios.get(\"http://localhost:3001/api/hilfsstoffearten\").then((response)=>{\n            setArten(response.data)\n        }); \n      },[]);\n      \n    const artHilfsstoffe =(artName)=>{ //artnameveriable senden\n        Axios.post(`http://localhost:3001/api/arths/${artName}`)\n      } ;\n  \n\n      function testsyno(x) {\n        let result ='keine' ;\n        if (x) {\n          result = x;\n        } \n        return result;\n      }\n    return (\n       <section className=\"GesamtListArt\">\n        {arten.map((val)=>{\n            return ( <section key={val.artName} > \n            <section className=\"EinzelArt\"  >\n                    <Link to=\"/Hilfsstoffenlist\"  onClick={\n                    ()=> artHilfsstoffe(val.artName)\n                } className=\"linkItem\">\n                    <h1 className=\"ArtName\"> {val.artName} </h1> \n                </Link>\n               \n              <p className=\"beschreibungArt\"> {val.beschreibung} </p>\n              <p className=\"element\"> Beispiel: </p>\n              <p className=\"beschreibung\" >{testsyno(val.beispiel)}</p>\n              <p className=\"element\"> Literatur: </p>\n              <p className=\"beschreibung\"> {val.litertaur}</p>\n                  \n                  <hr className=\"Seperator\" />\n                      </section>\n                      </section>);\n              \n            })\n            };\n         </section> );\n}\nexport default Hilfsstoffearten;\n\n"]},"metadata":{},"sourceType":"module"}